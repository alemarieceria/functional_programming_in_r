{
  "hash": "c7d074c50641c70d3f146a7171d398a9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lab 1\"\nformat: html\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n\n::: panel-tabset\n## Lab 1\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"**`install_and_load_libraries()`** function to import data using `{pacman}` R package and to keep track dependencies using `{renv}` R package\"}\ninstall_packages_and_load_libraries <- function(cran_packages = NULL, github_packages = NULL) {\n  # Function to install a package if not already installed\n  ensure_package_installed <- function(pkg) {\n    if (!requireNamespace(pkg, quietly = TRUE)) {\n      install.packages(pkg)\n    }\n  }\n  \n  # Ensure pacman and renv are installed\n  ensure_package_installed(\"pacman\")\n  ensure_package_installed(\"renv\")\n  \n  # Load pacman and renv\n  library(pacman)\n  library(renv)\n  \n  # Install and load CRAN packages if specified\n  if (!is.null(cran_packages) && length(cran_packages) > 0) {\n    pacman::p_load(char = cran_packages)\n  }\n  \n  # Install and load GitHub packages if specified\n  if (!is.null(github_packages) && length(github_packages) > 0) {\n    pacman::p_install_gh(github_packages)\n  }\n  \n  # Snapshot the renv environment\n  suppressMessages(invisible(capture.output(renv::snapshot())))\n}\n\ncran_packages <- c(\n  # File management\n  \"fs\", \"here\",\n  # Dataset and data tidying\n  \"palmerpenguins\", \"tidyverse\", \"janitor\",\n  # Data visualization\n  \"scales\")\n\n# Execute function\ninstall_packages_and_load_libraries(cran_packages)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'renv'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    embed, update\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:utils':\n\n    history, upgrade\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    autoload, load, remove, use\n```\n\n\n:::\n:::\n\n\n\n\n\n[Website](https://fp-2022.netlify.app/lab-1/)\n\n### Data Structures\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Set Up\"}\nset.seed(123) # Set random number generation\n\nm <- lm(mpg ~ hp + cyl + drat, mtcars)\n\nl <- list(a = list(m = matrix(1:12, ncol = 3),\n              \t   v = 1:7),\n          b = data.frame(student = 1:15,\n                         score = rnorm(15, 100, 10)))\n```\n:::\n\n\n\n\n\n#### From model results\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"1a. Extract the qr tolerance (`tol`)\"}\ntol <- m$qr$tol\ntol\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1e-07\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"1b. Extract the term labels from the model\"}\nterms <- attr(m$terms, \"term.labels\")\nterms\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"hp\"   \"cyl\"  \"drat\"\n```\n\n\n:::\n:::\n\n\n\n\n\n#### From `l`\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"2a. Use at least two different methods to extract `m`\"}\nm1 <- l$a$m\nm1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"2a. Use at least two different methods to extract `m`\"}\nm2 <- l[[\"a\"]][\"m\"]\nm2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$m\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"2b. Extract the third column of `m`. Maintain the dimensions (matrix structure)\"}\nm1_third_col <- matrix(m1[, 3])\nm1_third_col\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1]\n[1,]    9\n[2,]   10\n[3,]   11\n[4,]   12\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"2c. Extract the score for student 7 in the data frame\"}\nstudent_7_score <- l$b$score[7]\nstudent_7_score\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 104.6092\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"2c. Extract the score for student 7 in the data frame\"}\n# Alternative: l$b[7, ]\n```\n:::\n\n\n\n\n\n### Loops\n\n`insurance_coverage.csv` file is corrupt, will use the penguins dataset instead\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"3. Split the data file by `species` and `sex`\"}\n# install.packages(\"palmerpenguins\")\nnames(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"species\"           \"island\"            \"bill_length_mm\"   \n[4] \"bill_depth_mm\"     \"flipper_length_mm\" \"body_mass_g\"      \n[7] \"sex\"               \"year\"             \n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"3. Split the data file by `species` and `sex`\"}\nby_species_sex <- split(penguins, list(penguins$species, penguins$sex))\nby_species_sex\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$Adelie.female\n# A tibble: 73 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n 1 Adelie  Torgersen           39.5          17.4               186        3800\n 2 Adelie  Torgersen           40.3          18                 195        3250\n 3 Adelie  Torgersen           36.7          19.3               193        3450\n 4 Adelie  Torgersen           38.9          17.8               181        3625\n 5 Adelie  Torgersen           41.1          17.6               182        3200\n 6 Adelie  Torgersen           36.6          17.8               185        3700\n 7 Adelie  Torgersen           38.7          19                 195        3450\n 8 Adelie  Torgersen           34.4          18.4               184        3325\n 9 Adelie  Biscoe              37.8          18.3               174        3400\n10 Adelie  Biscoe              35.9          19.2               189        3800\n# ℹ 63 more rows\n# ℹ 2 more variables: sex <fct>, year <int>\n\n$Chinstrap.female\n# A tibble: 34 × 8\n   species   island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>     <fct>           <dbl>         <dbl>             <int>       <int>\n 1 Chinstrap Dream            46.5          17.9               192        3500\n 2 Chinstrap Dream            45.4          18.7               188        3525\n 3 Chinstrap Dream            45.2          17.8               198        3950\n 4 Chinstrap Dream            46.1          18.2               178        3250\n 5 Chinstrap Dream            46            18.9               195        4150\n 6 Chinstrap Dream            46.6          17.8               193        3800\n 7 Chinstrap Dream            47            17.3               185        3700\n 8 Chinstrap Dream            45.9          17.1               190        3575\n 9 Chinstrap Dream            58            17.8               181        3700\n10 Chinstrap Dream            46.4          18.6               190        3450\n# ℹ 24 more rows\n# ℹ 2 more variables: sex <fct>, year <int>\n\n$Gentoo.female\n# A tibble: 58 × 8\n   species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>           <dbl>         <dbl>             <int>       <int>\n 1 Gentoo  Biscoe           46.1          13.2               211        4500\n 2 Gentoo  Biscoe           48.7          14.1               210        4450\n 3 Gentoo  Biscoe           46.5          13.5               210        4550\n 4 Gentoo  Biscoe           45.4          14.6               211        4800\n 5 Gentoo  Biscoe           43.3          13.4               209        4400\n 6 Gentoo  Biscoe           40.9          13.7               214        4650\n 7 Gentoo  Biscoe           45.5          13.7               214        4650\n 8 Gentoo  Biscoe           45.8          14.6               210        4200\n 9 Gentoo  Biscoe           42            13.5               210        4150\n10 Gentoo  Biscoe           46.2          14.5               209        4800\n# ℹ 48 more rows\n# ℹ 2 more variables: sex <fct>, year <int>\n\n$Adelie.male\n# A tibble: 73 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.3          20.6               190        3650\n 3 Adelie  Torgersen           39.2          19.6               195        4675\n 4 Adelie  Torgersen           38.6          21.2               191        3800\n 5 Adelie  Torgersen           34.6          21.1               198        4400\n 6 Adelie  Torgersen           42.5          20.7               197        4500\n 7 Adelie  Torgersen           46            21.5               194        4200\n 8 Adelie  Biscoe              37.7          18.7               180        3600\n 9 Adelie  Biscoe              38.2          18.1               185        3950\n10 Adelie  Biscoe              38.8          17.2               180        3800\n# ℹ 63 more rows\n# ℹ 2 more variables: sex <fct>, year <int>\n\n$Chinstrap.male\n# A tibble: 34 × 8\n   species   island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>     <fct>           <dbl>         <dbl>             <int>       <int>\n 1 Chinstrap Dream            50            19.5               196        3900\n 2 Chinstrap Dream            51.3          19.2               193        3650\n 3 Chinstrap Dream            52.7          19.8               197        3725\n 4 Chinstrap Dream            51.3          18.2               197        3750\n 5 Chinstrap Dream            51.3          19.9               198        3700\n 6 Chinstrap Dream            51.7          20.3               194        3775\n 7 Chinstrap Dream            52            18.1               201        4050\n 8 Chinstrap Dream            50.5          19.6               201        4050\n 9 Chinstrap Dream            50.3          20                 197        3300\n10 Chinstrap Dream            49.2          18.2               195        4400\n# ℹ 24 more rows\n# ℹ 2 more variables: sex <fct>, year <int>\n\n$Gentoo.male\n# A tibble: 61 × 8\n   species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>           <dbl>         <dbl>             <int>       <int>\n 1 Gentoo  Biscoe           50            16.3               230        5700\n 2 Gentoo  Biscoe           50            15.2               218        5700\n 3 Gentoo  Biscoe           47.6          14.5               215        5400\n 4 Gentoo  Biscoe           46.7          15.3               219        5200\n 5 Gentoo  Biscoe           46.8          15.4               215        5150\n 6 Gentoo  Biscoe           49            16.1               216        5550\n 7 Gentoo  Biscoe           48.4          14.6               213        5850\n 8 Gentoo  Biscoe           49.3          15.7               217        5850\n 9 Gentoo  Biscoe           49.2          15.2               221        6300\n10 Gentoo  Biscoe           48.7          15.1               222        5350\n# ℹ 51 more rows\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"4. Use a `for` loop to calculate the mean bill length (`bill_length_mm`) for each `species/sex` combination`\"}\nmean_bill_length_for_loop <- vector(\"list\", length(by_species_sex))\n\nfor(i in seq_along(by_species_sex)) {\n  mean_bill_length_for_loop[i] <- round(mean(\n    by_species_sex[[i]]$bill_length_mm,\n    na.rm = TRUE\n  ), 2)\n}\n\nmean_bill_length_for_loop\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] 37.26\n\n[[2]]\n[1] 46.57\n\n[[3]]\n[1] 45.56\n\n[[4]]\n[1] 40.39\n\n[[5]]\n[1] 51.09\n\n[[6]]\n[1] 49.47\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"5. Replicate this calculation with `lapply`, `sapply`, and `vapply`\"}\nmean_bill_length_lapply <- lapply(by_species_sex, \\(df) round(mean(df$bill_length_mm, na.rm = TRUE), 2))\nmean_bill_length_lapply\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$Adelie.female\n[1] 37.26\n\n$Chinstrap.female\n[1] 46.57\n\n$Gentoo.female\n[1] 45.56\n\n$Adelie.male\n[1] 40.39\n\n$Chinstrap.male\n[1] 51.09\n\n$Gentoo.male\n[1] 49.47\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"5. Replicate this calculation with `lapply`, `sapply`, and `vapply`\"}\nmean_bill_length_sapply <- sapply(by_species_sex, \\(df) round(mean(df$bill_length_mm, na.rm = TRUE), 2))\nmean_bill_length_sapply\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Adelie.female Chinstrap.female    Gentoo.female      Adelie.male \n           37.26            46.57            45.56            40.39 \n  Chinstrap.male      Gentoo.male \n           51.09            49.47 \n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"5. Replicate this calculation with `lapply`, `sapply`, and `vapply`\"}\nmean_bill_length_vapply <- vapply(by_species_sex, \\(df) round(mean(df$bill_length_mm, na.rm = TRUE), 2), FUN.VALUE = double(1))\nmean_bill_length_vapply\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Adelie.female Chinstrap.female    Gentoo.female      Adelie.male \n           37.26            46.57            45.56            40.39 \n  Chinstrap.male      Gentoo.male \n           51.09            49.47 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"6. Produce separate plots showing the change in `bill_length_mm` from 2007 to 2009 for each `species/sex` combination (with a single loop). Set the `bill_length_mm` axis so the limits equal the overall minimum and maximum values for `bill_length_mm`\"}\nplots <- lapply(by_species_sex, \\(df) {\n  bill_length_range <- range(df$bill_length_mm)\n  min_year <- min(df$year)\n  max_year <- max(df$year)\n  \n  ggplot(df, aes(factor(year), bill_length_mm)) +\n  geom_boxplot() +\n  scale_y_continuous(limits = bill_length_range) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(\n      hjust = 0.5, \n      face = \"bold\", \n      size = 18\n    )\n  ) +\n  labs(\n    x = \"Year\",\n    y = \"Bill Length (mm)\",\n    title = str_to_title(paste(\n      \"Bill Length for a\", \n      unique(penguins$sex),\n      unique(penguins$species),\n      \"from\",\n      min_year,\n      \"to\",\n      max_year\n    ))\n  )\n})\n\nplots$Chinstrap.female\n```\n\n::: {.cell-output-display}\n![](labs_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"7. Use a `for` loop to save the plots to a folder on your computer\"}\ndir_create(here(\"plots\"))\nfile_names <- paste0(\n  tolower(gsub(\"\\\\.\", \"_\", names(by_species_sex))), \"_bill_lengths.png\"\n)\nfile_names\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"adelie_female_bill_lengths.png\"    \"chinstrap_female_bill_lengths.png\"\n[3] \"gentoo_female_bill_lengths.png\"    \"adelie_male_bill_lengths.png\"     \n[5] \"chinstrap_male_bill_lengths.png\"   \"gentoo_male_bill_lengths.png\"     \n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"7. Use a `for` loop to save the plots to a folder on your computer\"}\nfile_paths <- here(\"plots\", file_names)\nfile_paths\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"C:/Users/4p0nc/OneDrive - hawaii.edu/Desktop/r/functional_programming_in_r/plots/adelie_female_bill_lengths.png\"   \n[2] \"C:/Users/4p0nc/OneDrive - hawaii.edu/Desktop/r/functional_programming_in_r/plots/chinstrap_female_bill_lengths.png\"\n[3] \"C:/Users/4p0nc/OneDrive - hawaii.edu/Desktop/r/functional_programming_in_r/plots/gentoo_female_bill_lengths.png\"   \n[4] \"C:/Users/4p0nc/OneDrive - hawaii.edu/Desktop/r/functional_programming_in_r/plots/adelie_male_bill_lengths.png\"     \n[5] \"C:/Users/4p0nc/OneDrive - hawaii.edu/Desktop/r/functional_programming_in_r/plots/chinstrap_male_bill_lengths.png\"  \n[6] \"C:/Users/4p0nc/OneDrive - hawaii.edu/Desktop/r/functional_programming_in_r/plots/gentoo_male_bill_lengths.png\"     \n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"7. Use a `for` loop to save the plots to a folder on your computer\"}\nfor(plot in seq_along(file_paths)) {\n  ggsave(\n    file_paths[plot],\n    plots[[plot]],\n    width = 20,\n    height = 12,\n    units = \"in\",\n    dpi = 300\n  )\n}\n```\n:::\n\n\n\n\n:::",
    "supporting": [
      "labs_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}